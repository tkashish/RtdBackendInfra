---
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  BundleType:
    Type: String
    Description: Application Bundle Type
    Default: zip

Resources:
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:                # optional, list of String
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole
      RoleName: CodeDeployServiceRole     # optional

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName:
        Ref: ApplicationName     # optional

  CodeDeployDeploymentGroup:
    DependsOn:
      - CodeDeployServiceRole
      - BlueGreenAutoScalingGroup
      - LoadBalancer
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      Deployment:
        Description: "A sample deployment"
        IgnoreApplicationStopFailures: true
        Revision:
          RevisionType: S3
          S3Location:
            Bucket:
              Ref: CodedeployBucketName
            Key:
              Ref: ApplicationName
            BundleType:
              Ref: BundleType
      ApplicationName:
        Ref: CodeDeployApplication     # required
      LoadBalancerInfo:
        ElbInfoList:
          - Name:
              Ref: LoadBalancer
      AutoScalingGroups:                # optional, list of String
        - Ref: BlueGreenAutoScalingGroup
      DeploymentConfigName: CodeDeployDefault.OneAtATime     # optional
      DeploymentGroupName:
        Fn::Sub: "${ApplicationName}-DeploymentGroup"    # optional
      ServiceRoleArn:
        Fn::GetAtt: CodeDeployServiceRole.Arn
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
